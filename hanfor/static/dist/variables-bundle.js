/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"variables": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./js/variables.js","commons"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/variables.js":
/*!*************************!*\
  !*** ./js/variables.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {__webpack_require__(/*! gasparesganga-jquery-loading-overlay */ \"./node_modules/gasparesganga-jquery-loading-overlay/src/loadingoverlay.js\");\r\n__webpack_require__(/*! bootstrap */ \"./node_modules/bootstrap/dist/js/bootstrap.js\");\r\n__webpack_require__(/*! bootstrap-confirmation2 */ \"./node_modules/bootstrap-confirmation2/dist/bootstrap-confirmation.js\");\r\n__webpack_require__(/*! datatables.net-bs4 */ \"./node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js\");\r\n__webpack_require__(/*! datatables.net-select */ \"./node_modules/datatables.net-select/js/dataTables.select.js\");\r\n__webpack_require__(/*! jquery-ui/ui/widgets/autocomplete */ \"./node_modules/jquery-ui/ui/widgets/autocomplete.js\");\r\n__webpack_require__(/*! ./bootstrap-tokenfield.js */ \"./js/bootstrap-tokenfield.js\");\r\n\r\n// Globals\r\nlet available_types = ['CONST', 'ENUM'];\r\nlet var_search_string = sessionStorage.getItem('var_search_string');\r\nlet type_inference_errors = [];\r\n\r\n/**\r\n * Store the currently active (in the modal) variable.\r\n * @param variables_table\r\n */\r\nfunction store_variable(variables_table) {\r\n    let var_modal_content = $('.modal-content');\r\n    var_modal_content.LoadingOverlay('show');\r\n\r\n    // Get data.\r\n    const var_name = $('#variable_name').val();\r\n    const var_name_old = $('#variable_name_old').val();\r\n    const var_type = $('#variable_type').val();\r\n    const var_type_old = $('#variable_type_old').val();\r\n    const associated_row_id = parseInt($('#modal_associated_row_index').val());\r\n    const occurrences = $('#occurences').val();\r\n    const const_val = $('#variable_value').val();\r\n    const const_val_old = $('#variable_value_old').val();\r\n    const updated_constraints = $('#variable_constraint_updated').val();\r\n\r\n    // Fetch the constraints\r\n    let constraints = {};\r\n    $('.formalization_card').each(function ( index ) {\r\n        // Scope and Pattern\r\n        let constraint = {};\r\n        constraint['id'] = $(this).attr('title');\r\n        $( this ).find( 'select').each( function () {\r\n            if ($( this ).hasClass('scope_selector')) {\r\n                constraint['scope'] = $( this ).val();\r\n            }\r\n            if ($( this ).hasClass('pattern_selector')) {\r\n                constraint['pattern'] = $( this ).val();\r\n            }\r\n        });\r\n\r\n        // Expressions\r\n        constraint['expression_mapping'] = {};\r\n        $( this ).find( \"textarea.reqirement-variable\" ).each(function () {\r\n            if ($(this).attr('title') !== '')\r\n            constraint['expression_mapping'][$(this).attr('title')] = $(this).val();\r\n        });\r\n\r\n        constraints[constraint['id']] = constraint;\r\n    });\r\n\r\n    // Update available types.\r\n    if (var_type !== null && available_types.indexOf(var_type) <= -1) {\r\n        available_types.push(var_type);\r\n    }\r\n\r\n    // Process enumerators in case we have an enum\r\n    let enumerators = [];\r\n    if (var_type === 'ENUM') {\r\n        // Fetch enumerators.\r\n        $('.enumerator-input').each(function (index, elem) {\r\n            let enum_name = $(this).find('.enum_name_input').val();\r\n            let enum_value = $(this).find('.enum_value_input').val();\r\n            enumerators.push([enum_name, enum_value]);\r\n        });\r\n    }\r\n\r\n    // Store the variable.\r\n    $.post( \"api/var/update\",\r\n        {\r\n            name: var_name,\r\n            name_old: var_name_old,\r\n            type: var_type,\r\n            const_val: const_val,\r\n            const_val_old: const_val_old,\r\n            type_old: var_type_old,\r\n            occurrences: occurrences,\r\n            constraints: JSON.stringify(constraints),\r\n            updated_constraints: updated_constraints,\r\n            enumerators: JSON.stringify(enumerators)\r\n        },\r\n        // Update var table on success or show an error message.\r\n        function( data ) {\r\n            var_modal_content.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                if (data.rebuild_table) {\r\n                    location.reload();\r\n                } else {\r\n                    variables_table.row(associated_row_id).data(data.data).draw();\r\n                    $('#variable_modal').modal('hide');\r\n                }\r\n            }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Import variable collection set in the import modal.\r\n */\r\nfunction import_variables() {\r\n    let variable_import_modal = $('#variable_import_modal');\r\n    let sess_name = $('#variable_import_sess_name').val();\r\n    let sess_revision = $('#variable_import_sess_revision').val();\r\n    let import_option = $('#import_option').val();\r\n\r\n    variable_import_modal.LoadingOverlay('show');\r\n\r\n    $.post( \"api/var/var_import_collection\",\r\n        {\r\n            sess_name: sess_name,\r\n            sess_revision: sess_revision,\r\n            import_option: import_option\r\n        },\r\n        function( data ) {\r\n            variable_import_modal.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                variable_import_modal.modal('hide');\r\n                location.reload();\r\n            }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Open modal for the user to trigger variable import.\r\n * @param sess_name\r\n * @param sess_revision\r\n */\r\nfunction open_import_modal(sess_name, sess_revision) {\r\n    // Prepare requirement Modal\r\n    let variable_import_modal = $('#variable_import_modal');\r\n    $('#variable_import_sess_name').val(sess_name);\r\n    $('#variable_import_sess_revision').val(sess_revision);\r\n    $('#variable_import_modal_title').html('Import from Session: ' + sess_name + ' at: ' + sess_revision);\r\n\r\n    variable_import_modal.modal('show');\r\n\r\n    // Load informations about selected var collection\r\n    variable_import_modal.LoadingOverlay('show');\r\n    $.post( \"api/var/var_import_info\",\r\n        {\r\n            sess_name: sess_name,\r\n            sess_revision: sess_revision\r\n        },\r\n        function( data ) {\r\n            variable_import_modal.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                $('#import_tot_number').html('Total:\\t' + data['tot_vars'] + ' Variables.');\r\n                $('#import_new_number').html('New:\\t' + data['new_vars'] + ' Variables.');\r\n            }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Show / Hide Value CONST value input for variables.\r\n * @param revert\r\n */\r\nfunction show_variable_val_input(revert) {\r\n    if (revert === true) {\r\n        $('#variable_value_form_group').hide();\r\n    } else {\r\n        $('#variable_value_form_group').show();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Apply multi edit on selected variables.\r\n * @param variables_table\r\n * @param del\r\n */\r\nfunction apply_multi_edit(variables_table, del=false) {\r\n    let page = $('body');\r\n    page.LoadingOverlay('show');\r\n    let change_type = $('#multi-change-type-input').val().trim();\r\n    let selected_vars = [];\r\n    variables_table.rows( {selected:true} ).every( function () {\r\n        let d = this.data();\r\n        selected_vars.push(d['name']);\r\n    } );\r\n\r\n    // Update selected vars.\r\n    $.post( \"api/var/multi_update\",\r\n        {\r\n            change_type: change_type,\r\n            selected_vars: JSON.stringify(selected_vars),\r\n            del: del\r\n        },\r\n        // Update requirements table on success or show an error message.\r\n        function( data ) {\r\n            page.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                location.reload();\r\n            }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Enable/disable the active variables (P, Q, R, ...) in the requirement modal based on scope and pattern.\r\n */\r\nfunction update_displayed_constraint_inputs() {\r\n    $('.requirement_var_group').each(function () {\r\n        $( this ).hide();\r\n    });\r\n\r\n    $('.formalization_card').each(function ( index ) {\r\n        // Fetch attributes\r\n        const formalization_id = $(this).attr('title');\r\n        const selected_scope = $('#requirement_scope' + formalization_id).val();\r\n        const selected_pattern = $('#requirement_pattern' + formalization_id).val();\r\n        let var_p = $('#requirement_var_group_p' + formalization_id);\r\n        let var_q = $('#requirement_var_group_q' + formalization_id);\r\n        let var_r = $('#requirement_var_group_r' + formalization_id);\r\n        let var_s = $('#requirement_var_group_s' + formalization_id);\r\n        let var_t = $('#requirement_var_group_t' + formalization_id);\r\n        let var_u = $('#requirement_var_group_u' + formalization_id);\r\n\r\n        switch(selected_scope) {\r\n            case 'BEFORE':\r\n            case 'AFTER':\r\n                var_p.show();\r\n                break;\r\n            case 'BETWEEN':\r\n            case 'AFTER_UNTIL':\r\n                var_p.show();\r\n                var_q.show();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        switch(selected_pattern) {\r\n            case 'Absence':\r\n            case 'Universality':\r\n            case 'Existence':\r\n            case 'BoundedExistence':\r\n                var_r.show();\r\n                break;\r\n            case 'Invariant':\r\n            case 'Precedence':\r\n            case 'Response':\r\n            case 'MinDuration':\r\n            case 'MaxDuration':\r\n            case 'BoundedRecurrence':\r\n                var_r.show();\r\n                var_s.show();\r\n                break;\r\n            case 'PrecedenceChain1-2':\r\n            case 'PrecedenceChain2-1':\r\n            case 'ResponseChain1-2':\r\n            case 'ResponseChain2-1':\r\n            case 'BoundedResponse':\r\n            case 'BoundedInvariance':\r\n            case 'TimeConstrainedInvariant':\r\n                var_r.show();\r\n                var_s.show();\r\n                var_t.show();\r\n                break;\r\n            case 'ConstrainedChain':\r\n            case 'TimeConstrainedMinDuration':\r\n            case 'ConstrainedTimedExistence':\r\n                var_r.show();\r\n                var_s.show();\r\n                var_t.show();\r\n                var_u.show();\r\n                break;\r\n            case 'NotFormalizable':\r\n                var_p.hide();\r\n                var_q.hide();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Updates the formalization textarea based on the selected scope and expressions in P, Q, R, S, T.\r\n */\r\nfunction update_formalization() {\r\n    $('.formalization_card').each(function ( index ) {\r\n        // Fetch attributes\r\n        const formalization_id = $(this).attr('title');\r\n\r\n        let formalization = '';\r\n        const selected_scope = $('#requirement_scope' + formalization_id).find('option:selected').text().replace(/\\s\\s+/g, ' ');\r\n        const selected_pattern = $('#requirement_pattern' + formalization_id).find('option:selected').text().replace(/\\s\\s+/g, ' ');\r\n\r\n        if (selected_scope !== 'None' && selected_pattern !== 'None') {\r\n            formalization = selected_scope + ', ' + selected_pattern + '.';\r\n        }\r\n\r\n        // Update formalization with variables.\r\n        let var_p = $('#formalization_var_p' + formalization_id).val();\r\n        let var_q = $('#formalization_var_q' + formalization_id).val();\r\n        let var_r = $('#formalization_var_r' + formalization_id).val();\r\n        let var_s = $('#formalization_var_s' + formalization_id).val();\r\n        let var_t = $('#formalization_var_t' + formalization_id).val();\r\n        let var_u = $('#formalization_var_u' + formalization_id).val();\r\n\r\n        if (var_p.length > 0) {\r\n            formalization = formalization.replace(/{P}/g, var_p);\r\n        }\r\n        if (var_q.length > 0) {\r\n            formalization = formalization.replace(/{Q}/g, var_q);\r\n        }\r\n        if (var_r.length > 0) {\r\n            formalization = formalization.replace(/{R}/g, var_r);\r\n        }\r\n        if (var_s.length > 0) {\r\n            formalization = formalization.replace(/{S}/g, var_s);\r\n        }\r\n        if (var_t.length > 0) {\r\n            formalization = formalization.replace(/{T}/g, var_t);\r\n        }\r\n        if (var_u.length > 0) {\r\n            formalization = formalization.replace(/{U}/g, var_u);\r\n        }\r\n\r\n        $('#current_formalization_textarea' + formalization_id).val(formalization);\r\n\r\n        // Update visual representation of type inference errors.\r\n        let header = $('#formalization_heading' + formalization_id);\r\n        if (formalization_id in type_inference_errors) {\r\n            for (let i = 0; i < type_inference_errors[formalization_id].length; i++) {\r\n                $('#formalization_var_' + type_inference_errors[formalization_id][i] + formalization_id)\r\n                    .addClass('type-error');\r\n                header.addClass('type-error-head');\r\n            }\r\n        } else {\r\n            header.removeClass('type-error-head');\r\n        }\r\n    });\r\n    $('#variable_constraint_updated').val('true');\r\n}\r\n\r\n\r\nfunction delete_constraint(constraint_id) {\r\n    let requirement_modal_content = $('.modal-content');\r\n    requirement_modal_content.LoadingOverlay('show');\r\n    const var_name = $('#variable_name').val();\r\n    $.post( \"api/var/del_constraint\",\r\n        {\r\n            name: var_name,\r\n            constraint_id: constraint_id\r\n        },\r\n        function( data ) {\r\n            requirement_modal_content.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                $('#formalization_accordion').html(data['html']);\r\n            }\r\n    }).done(function () {\r\n        update_displayed_constraint_inputs();\r\n        update_formalization();\r\n        bind_expression_buttons();\r\n    });\r\n}\r\n\r\n\r\nfunction bind_expression_buttons() {\r\n    $('.formalization_selector').change(function () {\r\n        update_displayed_constraint_inputs();\r\n        update_formalization();\r\n    });\r\n    $('.reqirement-variable, .req_var_type').change(function () {\r\n        update_formalization();\r\n    });\r\n    $('.delete_formalization').confirmation({\r\n      rootSelector: '.delete_formalization'\r\n    }).click(function () {\r\n        delete_constraint( $(this).attr('name') );\r\n    });\r\n}\r\n\r\n\r\nfunction add_constraint() {\r\n    // Request a new Constraint/Formalization. And add its edit elements to the modal.\r\n    let var_modal_content = $('.modal-content');\r\n    var_modal_content.LoadingOverlay('show');\r\n\r\n    // Get data.\r\n    const var_name = $('#variable_name').val();\r\n    const associated_row_id = parseInt($('#modal_associated_row_index').val());\r\n\r\n    // Store the variable.\r\n    $.post( \"api/var/new_constraint\",\r\n        {\r\n            name: var_name\r\n        },\r\n        // Update var table on success or show an error message.\r\n        function( data ) {\r\n            var_modal_content.LoadingOverlay('hide', true);\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                $('#formalization_accordion').html(data['html']);\r\n            }\r\n    }).done(function () {\r\n        update_displayed_constraint_inputs();\r\n        update_formalization();\r\n        bind_expression_buttons();\r\n    });\r\n}\r\n\r\n\r\nfunction get_variable_constraints_html(var_name) {\r\n    $.post( \"api/var/get_constraints_html\",\r\n        {\r\n            name: var_name\r\n        },\r\n        function( data ) {\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                type_inference_errors = data.type_inference_errors;\r\n                $('#formalization_accordion').html(data['html']);\r\n            }\r\n    }).done(function () {\r\n        update_displayed_constraint_inputs();\r\n        update_formalization();\r\n        bind_expression_buttons();\r\n    });\r\n}\r\n\r\n\r\nfunction is_constraint_link(name) {\r\n    const regex = /^(Constraint_)(.*)(_[0-9]+$)/gm;\r\n    let result = null;\r\n    let match = regex.exec(name);\r\n\r\n    if (match !== null) {\r\n      result = match[2];\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n/**\r\n * Find the datatable row index for a variable by its name.\r\n * @param {number} name the requirement id.\r\n * @returns {number} row_index the datatables row index.\r\n */\r\nfunction get_rowidx_by_var_name(name) {\r\n    let variables_table = $('#variables_table').DataTable();\r\n    let result = -1;\r\n    variables_table\r\n        .row( function ( idx, data, node ) {\r\n            if (data.name === name) {\r\n                result = idx;\r\n            }\r\n        });\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction show_enumerators_in_modal(revert=false) {\r\n    if (revert === true) {\r\n        $('.enum-controls').hide();\r\n    } else {\r\n        $('.enum-controls').show();\r\n    }\r\n}\r\n\r\n\r\nfunction load_enumerators_to_modal(var_name) {\r\n    $.post( \"api/var/get_enumerators\",\r\n        {\r\n            name: var_name\r\n        },\r\n        function( data ) {\r\n            if (data['success'] === false) {\r\n                alert(data['errormsg']);\r\n            } else {\r\n                console.log(data['enumerators']);\r\n                $.each(data['enumerators'], function (index, item) {\r\n                    const stripped_name = item[0].substr(var_name.length + 1);\r\n                    add_enumerator_template(stripped_name, item[1]);\r\n                })\r\n            }\r\n    }).done(function () {\r\n        update_displayed_constraint_inputs();\r\n        update_formalization();\r\n        bind_expression_buttons();\r\n    });\r\n}\r\n\r\n\r\nfunction load_variable(row_idx) {\r\n    // Get row data\r\n    let data = $('#variables_table').DataTable().row(row_idx).data();\r\n\r\n    // Prepare requirement Modal\r\n    let var_modal_content = $('.modal-content');\r\n    show_variable_val_input(true);\r\n    show_enumerators_in_modal(true);\r\n    $('#variable_modal').modal('show');\r\n\r\n    // Meta information\r\n    $('#modal_associated_row_index').val(row_idx);\r\n    $('#variable_name_old').val(data.name);\r\n    $('#variable_type_old').val(data.type);\r\n    $('#occurences').val(data.used_by);\r\n\r\n    // Visible information\r\n    $('#variable_modal_title').html('Variable: ' + data.name);\r\n    $('#variable_name').val(data.name);\r\n\r\n    let type_input = $('#variable_type');\r\n    let variable_value = $('#variable_value');\r\n    let variable_value_old = $('#variable_value_old');\r\n\r\n    type_input.val(data.type);\r\n    variable_value.val('');\r\n    variable_value_old.val('');\r\n\r\n    if (data.type === 'CONST' || data.type === 'ENUMERATOR') {\r\n        show_variable_val_input();\r\n        variable_value.val(data.const_val);\r\n        variable_value_old.val(data.const_val);\r\n    } else if (data.type === 'ENUM') {\r\n        show_enumerators_in_modal();\r\n        $('#enumerators').html('');\r\n        load_enumerators_to_modal(data.name);\r\n    }\r\n\r\n    type_input.autocomplete({\r\n        minLength: 0,\r\n        source: available_types\r\n    }).on('focus', function() { $(this).keydown(); });\r\n\r\n    // Load constraints\r\n    get_variable_constraints_html(data.name);\r\n\r\n    var_modal_content.LoadingOverlay('hide');\r\n}\r\n\r\n\r\nfunction add_enum_via_modal() {\r\n    const enum_name = $('#enum_name').val();\r\n    $.post( \"api/var/add_new_enum\",\r\n    {\r\n        name: enum_name\r\n    },\r\n    function( data ) {\r\n        if (data['success'] === false) {\r\n            alert(data['errormsg']);\r\n        } else {\r\n            location.reload();\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction add_enumerator_template(name, value) {\r\n    const enumerator_template = `\r\n        <div class=\"input-group enumerator-input\">\r\n            <span class=\"input-group-addon\">Name</span>\r\n            <input class=\"form-control enum_name_input\" type=\"text\" value=\"${name}\">\r\n            <span class=\"input-group-addon\">Value</span>\r\n            <input class=\"form-control enum_value_input\" type=\"number\" value=\"${value}\">\r\n        </div>`;\r\n    $('#enumerators').append(enumerator_template);\r\n}\r\n\r\n\r\n$(document).ready(function() {\r\n    // Prepare and load the variables table.\r\n    let variables_table = $('#variables_table').DataTable({\r\n        \"paging\": true,\r\n        \"stateSave\": true,\r\n        \"select\": {\r\n            style:    'os',\r\n            selector: 'td:first-child'\r\n        },\r\n        \"pageLength\": 50,\r\n        \"responsive\": true,\r\n        \"lengthMenu\": [[10, 50, 100, 500, -1], [10, 50, 100, 500, \"All\"]],\r\n        \"dom\": 'rt<\"container\"<\"row\"<\"col-md-6\"li><\"col-md-6\"p>>>',\r\n        \"ajax\": \"api/var/gets\",\r\n        \"deferRender\": true,\r\n        \"columns\": [\r\n            {\r\n                \"orderable\": false,\r\n                \"className\": 'select-checkbox',\r\n                \"targets\": [0],\r\n                \"data\": null,\r\n                \"defaultContent\": \"\"\r\n            },\r\n            {\r\n                \"data\": \"name\",\r\n                \"targets\": [1],\r\n                \"render\": function ( data, type, row, meta ) {\r\n                    result = '<a class=\"modal-opener\" href=\"#\">' + data + '</span></br>';\r\n                    return result;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"type\",\r\n                \"targets\": [2],\r\n                \"render\": function ( data, type, row, meta ) {\r\n                    if (data !== null && available_types.indexOf(data) <= -1) {\r\n                        available_types.push(data);\r\n                    }\r\n                    if (data !== null && data === 'CONST') {\r\n                        data = data + ' (' + row['const_val'] + ')';\r\n                    }\r\n                    return data;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"used_by\",\r\n                \"targets\": [3],\r\n                \"render\": function ( data, type, row, meta ) {\r\n                    let result = '';\r\n                    if ($.inArray('Type_inference_error', row.tags) > -1) {\r\n                        result += '<span class=\"badge badge-danger\">' +\r\n                                    '<a href=\"#\" class=\"variable_link\" ' +\r\n                                    'data-name=\"' + row.name + '\" >Has type inference error</a>' +\r\n                                    '</span> ';\r\n                    }\r\n                    $(data).each(function (id, name) {\r\n                        if (name.length > 0) {\r\n                            let constraint_parent = is_constraint_link(name);\r\n                            if (constraint_parent !== null) {\r\n                                result += '<span class=\"badge badge-success\">' +\r\n                                    '<a href=\"#\" class=\"variable_link\" ' +\r\n                                    'data-name=\"' + constraint_parent + '\" >' + name + '</a>' +\r\n                                    '</span> ';\r\n                            } else {\r\n                                let search_query = '?command=search&col=2&q=' + name;\r\n                                result += '<span class=\"badge badge-info\">' +\r\n                                '<a href=\"./' + search_query + '\" target=\"_blank\">' + name + '</a>' +\r\n                                '</span> ';\r\n                            }\r\n                        }\r\n                    });\r\n                    if (result.length < 1) {\r\n                        result += '<span class=\"badge badge-warning\">' +\r\n                            '<a href=\"#\">Not used</a>' +\r\n                            '</span></br>';\r\n                    }\r\n                    return result;\r\n                }\r\n\r\n            },\r\n            {\r\n                \"data\": \"used_by\",\r\n                \"targets\": [4],\r\n                \"visible\": false,\r\n                \"searchable\": false,\r\n                \"render\": function ( data, type, row, meta ) {\r\n                    result = '';\r\n                    $(data).each(function (id, name) {\r\n                        if (name.length > 0) {\r\n                            if (result.length > 1) {\r\n                                result += ', '\r\n                            }\r\n                            result += name;\r\n                        }\r\n                    });\r\n                    return result;\r\n                }\r\n            }\r\n        ],\r\n        initComplete : function() {\r\n            $('#search_bar').val(var_search_string);\r\n            $('.variable_link').click(function (event) {\r\n                event.preventDefault();\r\n                load_variable(get_rowidx_by_var_name($(this).data('name')));\r\n            });\r\n        }\r\n    });\r\n    variables_table.column(3).visible(true);\r\n    variables_table.column(4).visible(false);\r\n\r\n    // Bind big custom searchbar to search the table.\r\n    $('#search_bar').keyup(function(){\r\n      variables_table.search($(this).val()).draw();\r\n      sessionStorage.setItem('var_search_string', $(this).val());\r\n    });\r\n\r\n    // Add listener for variable link to modal.\r\n    $('#variables_table').find('tbody').on('click', 'a.modal-opener', function (event) {\r\n        // prevent body to be scrolled to the top.\r\n        event.preventDefault();\r\n        let row_idx = variables_table.row($(event.target).parent()).index();\r\n        load_variable(row_idx);\r\n    });\r\n\r\n    // Store changes on variable on save.\r\n    $('#save_variable_modal').click(function () {\r\n        store_variable(variables_table);\r\n    });\r\n\r\n    $('#variable_type').on('keyup change autocompleteclose', function () {\r\n        if ($( this ).val() === 'CONST') {\r\n            show_variable_val_input();\r\n        } else {\r\n            show_variable_val_input(revert=true);\r\n        }\r\n    });\r\n\r\n    // Add listener for importing variables from existing sessions/revisions\r\n    $('.import_link').on('click', function () {\r\n        const sess_name = $( this ).attr('data-name');\r\n        const sess_revision = $( this ).attr('data-revision');\r\n\r\n        open_import_modal(sess_name, sess_revision);\r\n    });\r\n\r\n    $('#save_variable_import_modal').click(function ( e ) {\r\n        import_variables();\r\n    });\r\n\r\n    // Multiselect.\r\n    // Select single rows\r\n    $('.select-all-button').on('click', function (e) {\r\n        // Toggle selection on\r\n        if ($( this ).hasClass('btn-secondary')) {\r\n            variables_table.rows( {page:'current'} ).select();\r\n        }\r\n        else { // Toggle selection off\r\n            variables_table.rows( {page:'current'} ).deselect();\r\n        }\r\n        // Toggle button state.\r\n        $('.select-all-button').toggleClass('btn-secondary btn-primary');\r\n    });\r\n\r\n    // Toggle \"Select all rows to `off` on user specific selection.\"\r\n    variables_table.on( 'user-select', function ( ) {\r\n        let select_buttons = $('.select-all-button');\r\n        select_buttons.removeClass('btn-primary');\r\n        select_buttons.addClass('btn-secondary ');\r\n    });\r\n\r\n    // Bind autocomplete for \"edit-selected\" types\r\n    $('#multi-change-type-input').autocomplete({\r\n        minLength: 0,\r\n        source: available_types,\r\n        delay: 100\r\n    }).on('focus', function() { $(this).keydown(); }).val('');\r\n\r\n    $('.apply-multi-edit').click(function () {\r\n        apply_multi_edit(variables_table);\r\n    });\r\n\r\n    // Multi Delete variables.\r\n    $('.delete_button').confirmation({\r\n        rootSelector: '.delete_button'\r\n    }).click(function () {\r\n        apply_multi_edit(variables_table, del=true);\r\n    });\r\n\r\n    // Add new Constraint\r\n    $('#add_constraint').click(function () {\r\n        add_constraint();\r\n    });\r\n\r\n    // Add new enum via modal.\r\n    $('#save_new_enum_modal').click(function () {\r\n        add_enum_via_modal();\r\n    });\r\n\r\n    // Add new enumerator from emum modal\r\n    $('#add_enumerator').click(function () {\r\n        add_enumerator_template('');\r\n    });\r\n\r\n} );\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/variables.js\n");

/***/ })

/******/ });